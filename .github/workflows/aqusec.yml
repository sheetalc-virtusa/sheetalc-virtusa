name: "Code Scanning"
on:
  push:
    branches:
      - main
jobs:
  Image-list:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run script
        run: |
          mkdir script_v1
          cd script_v1
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
          ./kustomize build kustomize_template > manifest.yaml
          python3 scripts/fetch_images.py
  Trivy-Scan:
    runs-on: ubuntu-latest
    needs: Image-list
    strategy:
      matrix:
        image: ['gcr.io/ml-pipeline/cache-deployer:1.8.5', 'gcr.io/ml-pipeline/cache-server:1.8.5', 'gcr.io/ml-pipeline/metadata-envoy:1.8.5', 'gcr.io/tfx-oss-public/ml_metadata_store_server:1.5.0', 'gcr.io/ml-pipeline/metadata-writer:1.8.5', 'gcr.io/ml-pipeline/minio:RELEASE.2019-08-14T20-37-41Z-license-compliance', 'gcr.io/ml-pipeline/api-server:1.8.5', 'gcr.io/ml-pipeline/persistenceagent:1.8.5', 'gcr.io/ml-pipeline/scheduledworkflow:1.8.5', 'gcr.io/ml-pipeline/frontend:1.8.5', 'gcr.io/ml-pipeline/viewer-crd-controller:1.8.5', 'gcr.io/ml-pipeline/visualization-server:1.8.5', 'gcr.io/ml-pipeline/mysql:5.7-debian', 'gcr.io/ml-pipeline/workflow-controller:v3.3.8-license-compliance']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Trivy vulnerability scanner in docker mode
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.image }}
          format: 'sarif'
          template: 'sarif'
          output: 'trivy-results-docker.sarif'
          severity: 'CRITICAL'
          timeout: '30m'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results-docker.sarif'
